# The purpose of this file is to save data into separate
# files (primary datasets) based on which HLT trigger bits are set.

# Each PoolOutputModule defines a file and HLT filter paths to
# select the event from.

include "Configuration/EventContent/data/EventContent.cff"

block HLTPrimaryDatasetsDefaults = {
  untracked vstring outputCommands = {
     "drop *"
  }
  untracked PSet dataset ={
    untracked string dataTier = "GEN-SIM-DIGI-RECO"
  }
}
replace HLTPrimaryDatasetsDefaults.outputCommands += FEVTSIMEventContent.outputCommands
replace HLTPrimaryDatasetsDefaults.outputCommands += "drop *_*Digis_*_HLT"

module pdTauFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdTauFilter.TriggerResultsTag = TriggerResults::HLT
replace pdTauFilter.HLTPaths = {
      "HLT1Tau",
      "HLT1Tau1MET",
      "HLT2TauPixel",
      "HLTXMuonTau",
      "HLTXElectronTau"
    }

path pdTauPath = {pdTauFilter}

module PDTau = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDTau"
  untracked string fileName = "file:PDTau.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = {"pdTauPath" }
  }
  untracked int32 basketSize = 4096 
}


module pdPhotonFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdPhotonFilter.TriggerResultsTag = TriggerResults::HLT
replace pdPhotonFilter.HLTPaths = { 
      "HLT1Photon",
      "HLT1PhotonRelaxed",
      "HLT2Photon",
      "HLT2PhotonRelaxed",
      "CandHLT2PhotonExclusive" }

path pdPhotonPath = {pdPhotonFilter}

module PDPhoton = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDPhoton"
  untracked string fileName = "file:PDPhoton.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = { "pdPhotonPath"    }
  }
  untracked int32 basketSize = 4096
}

module pdMuonFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdMuonFilter.TriggerResultsTag = TriggerResults::HLT
replace pdMuonFilter.HLTPaths = {
      "HLT1MuonIso",
      "HLT1MuonNonIso",
      "HLT2MuonNonIso",
      "HLT2MuonJPsi",
      "HLT2MuonUpsilon",
      "HLT2MuonZ",
      "HLTNMuonNonIso",
      "HLT2MuonSameSign",
      "HLTBJPsiMuMu",
      "HLTXMuonJets",
      "HLTXElectronMuon",
      "HLTXElectronMuonRelaxed",
      "HLTXMuonTau"
}

path pdMuonPath = {pdMuonFilter}

module PDMuon = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDMuon"
  untracked string fileName = "file:PDMuon.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = { "pdMuonPath"  }
  }
  untracked int32 basketSize = 4096
}

module pdMuonCalibFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdMuonCalibFilter.TriggerResultsTag = TriggerResults::HLT
replace pdMuonCalibFilter.HLTPaths = {      
      "CandHLT1MuonPrescalePt3",
      "CandHLT1MuonPrescalePt5",
      "CandHLT1MuonPrescalePt7x7",
      "CandHLT1MuonPrescalePt7x10",
      "CandHLT1MuonLevel1"
}

path pdMuonCalibPath = {pdMuonCalibFilter}

module PDMuonCalib = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDMuonCalib"
  untracked string fileName = "file:PDMuonCalib.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = {"pdMuonCalibPath"} 
  }
  untracked int32 basketSize = 4096
}

module pdElectronFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdElectronFilter.TriggerResultsTag = TriggerResults::HLT
replace pdElectronFilter.HLTPaths = {
      "HLT1Electron",
      "HLT1ElectronRelaxed",
      "HLT2Electron",
      "HLT2ElectronRelaxed",
      "HLT1EMHighEt",
      "HLT1EMVeryHighEt",
      "HLTXElectron1Jet",
      "HLTXElectron2Jet",
      "HLTXElectron3Jet",
      "HLTXElectron4Jet",
      "HLTXElectronMuon",
      "HLTXElectronMuonRelaxed",
      "HLTXElectronTau",
      "CandHLT2ElectronZCounter",
      "CandHLT2ElectronExclusive"
}

path pdElectronPath = {pdElectronFilter} 

module PDElectron = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDElectron"
  untracked string fileName = "file:PDElectron.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = { "pdElectronPath" }
  }
  untracked int32 basketSize = 4096
}

module pdBJetFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdBJetFilter.TriggerResultsTag = TriggerResults::HLT
replace pdBJetFilter.HLTPaths = {
      "HLTB2JetMu",
      "HLTB3JetMu",
      "HLTB4JetMu",
      "HLTBHTMu",
      "HLTXMuonBJet",
      "HLTXMuonBJetSoftMuon",
      "HLTB1Jet",
      "HLTB2Jet",
      "HLTB3Jet",
      "HLTB4Jet",
      "HLTBHT",
      "HLTXElectronBJet"
}

path pdBJet = {pdBJetFilter}

module PDBJet = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDBJet"
  untracked string fileName = "file:PDBJet.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = {"pdBJet"}
  }
  untracked int32 basketSize = 4096
}

module pdBJetCalibFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdBJetCalibFilter.TriggerResultsTag = TriggerResults::HLT
replace pdBJetCalibFilter.HLTPaths = { "HLTB1JetMu" }

path pdBJetCalibPath = {pdBJetCalibFilter}

module PDBJetCalib = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDBJetCalib"
  untracked string fileName = "file:PDBJetCalib.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = { "pdBJetCalibPath" }
  }
  untracked int32 basketSize = 4096
}

module pdJetMETFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdJetMETFilter.TriggerResultsTag = TriggerResults::HLT
replace pdJetMETFilter.HLTPaths = {
      "HLT1jet",
      "HLT2jet",
      "HLT3jet",
      "HLT4jet",
      "HLT1MET",
      "HLT2jetAco",
      "HLT1jet1METAco",
      "HLT1jet1MET",
      "HLT2jet1MET",
      "HLT3jet1MET",
      "HLT4jet1MET",
      "HLT1MET1HT",
      "HLT2jetvbfMET",
      "HLTS2jet1METNV",
      "HLTS2jet1METAco",
      "CandHLTSjet1MET1Aco",
      "CandHLTSjet2MET1Aco",
      "CandHLTS2jetAco",
      "CandHLTJetMETRapidityGap"
}
path pdJetMETPath = { pdJetMETFilter}

module PDJetMET = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDJetMET"
  untracked string fileName = "file:PDJetMET.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = {"pdJetMETPath"} 
  }
  untracked int32 basketSize = 4096
}

module pdJetMETCalibFilter = hltHighLevel  from "HLTrigger/HLTfilters/data/hltHighLevel.cfi"
replace pdJetMETCalibFilter.TriggerResultsTag = TriggerResults::HLT
replace pdJetMETCalibFilter.HLTPaths = {
      "HLT1jetPE1",
      "HLT1jetPE3",
      "HLT1jetPE5",
      "CandHLT1jetPE7",
      "CandHLT2jetAve30",
      "CandHLT2jetAve60",
      "CandHLT2jetAve110",
      "CandHLT2jetAve150",
      "CandHLT2jetAve200",
      "CandHLT1SumET",
      "HLT1Photon",
      "CandHLT1PhotonL1Isolated",
      "CandHLT1METPre1",
      "CandHLT1METPre2",
      "CandHLT1METPre3"
}

path pdJetMETCalibPath = {!pdJetMETFilter, pdJetMETCalibFilter}

# Veto those events which are already in pdJetMET to keep the size down
# because they will simply be overlaps
module PDJetMETCalib = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDJetMETCalib"
  untracked string fileName = "file:PDJetMETCalib.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = { 
	"pdJetMETCalibPath"
    }
  }
  untracked int32 basketSize = 4096
}

# The failed dataset is supposed to contain events that failed all paths
module PDFailed = PoolOutputModule {
  using HLTPrimaryDatasetsDefaults
  untracked string filterName = "PDFailed"
  untracked string fileName = "file:PDFailed.root"
  untracked PSet SelectEvents = { 
    vstring SelectEvents = { 
      "!*:HLT",
      "HLTMinBiasPixel:HLT",
      "HLTMinBias:HLT",
      "HLTZeroBias:HLT" 
    }
  }
  untracked int32 basketSize = 4096
}

endpath ePDTau          = {PDTau}
endpath ePDPhoton       = {PDPhoton}
endpath ePDMuon         = {PDMuon}
endpath ePDMuonCalib    = {PDMuonCalib}
endpath ePDElectron     = {PDElectron}
endpath ePDBJet         = {PDBJet}
endpath ePDBJetCalib    = {PDBJetCalib}
endpath ePDJetMET       = {PDJetMET}
endpath ePDJetMETCalib  = {PDJetMETCalib}
endpath ePDFailed       = {PDFailed}
